ARG PYTHON_BASE_IMAGE=python:3.11.0-slim
ARG BUILDER_BASE_IMAGE=omelet034/python-3.11.0-slim-poetry:latest
# build the dev image:
# install [tool.poetry.dev-dependencies]
# disable buffering of stdout stdin, disable pycache generation
# copy app files
# Activate entrypoint for running the uvicorn application server
# Document the exposed port
FROM ${BUILDER_BASE_IMAGE} as builder
COPY ./poetry.lock ./pyproject.toml /application_root/
WORKDIR /application_root
RUN poetry install --no-interaction --no-root

# difference is ENV,
FROM ${PYTHON_BASE_IMAGE} as dev-image
ENV PYTHONUNBUFFERED=1 \
  PYTHONDONTWRITEBYTECODE=1 \
  PYTHONPATH=/application_root \
  UVICORN_RELOAD=1 \
  UVICORN_LOG_LEVEL=debug
WORKDIR /application_root
COPY --from=builder /application_root/.venv /application_root/.venv
COPY ./scripts/run.sh /application_server/run.sh
COPY /app /application_root/app/
RUN addgroup --system app && adduser --system --group app && \
  chown app:app -R /application_root && \
  chown app:app -R /application_server && \
  chmod +x /application_server/run.sh /application_root/.venv/bin/activate 
USER app
CMD /application_server/run.sh -w 1 -h 0.0.0.0 -p 8080
EXPOSE 8080
